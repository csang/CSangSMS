package{	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform;	import flash.display.Stage;	import flash.display.StageDisplayState;	import flash.display.StageAlign;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.net.NetConnection;	import flash.net.NetStream;	import flash.media.Video;	import flash.geom.Rectangle;	import flash.events.Event;		[SWF(width="640",height="480")]		public class Local extends MovieClip{		var nc:NetConnection;		var ns:NetStream;		var nsClient:Object;		var video:Video;		var dragging:Boolean=false; 		var mySliderLength:uint=175;		var boundingBox:Rectangle = new Rectangle(0,0,mySliderLength,0);		function Local():void{			nc= new NetConnection;			nc.connect(null);			ns = new NetStream(nc);			ns.play("Media/Test.flv");			nsClient = new Object();			nsClient.onMetaData = omd;			nsClient.onCuePoint = ocp;			ns.client=nsClient;			video= new Video(640,480);			video.attachNetStream(ns);			stage.addChild(video);			stage.addChild(mcControlBar);			stage.addChild(mcPlayPause);			this.mcPlayPause.addEventListener(MouseEvent.CLICK, onClick);			this.mcPlayPause.buttonMode= true;			stage.addChild(slider_mc);			this.slider_mc.knob_mc.addEventListener(MouseEvent.MOUSE_DOWN, dragKnob);			this.slider_mc.knob_mc.addEventListener(MouseEvent.MOUSE_UP, releaseKnob);			slider_mc.knob_mc.addEventListener(Event.ENTER_FRAME, adjustVolume); 									function adjustVolume(event:Event):void { 				var myVolume:Number=slider_mc.knob_mc.x/mySliderLength; 				var myTransform:SoundTransform=new SoundTransform(myVolume); 				if (ns!=null) { 					ns.soundTransform=myTransform; 				}    			}			function dragKnob(event:MouseEvent):void{				 slider_mc.knob_mc.startDrag(false, boundingBox);				 dragging=true; 			}			function releaseKnob(event:MouseEvent):void { 				if (dragging) { 					slider_mc.knob_mc.stopDrag(); 					dragging=false; 				}   			} 			function omd(O:Object):void{				trace("OnMetaData");				trace("Duration: "+O.duration);			}			function ocp(O:Object):void{				trace("OnCuePoint");				trace(O.name+" at "+O.time);			}			function FullScreen(event:MouseEvent):void{				if(stage.displayState==StageDisplayState.NORMAL){					stage.displayState=StageDisplayState.FULL_SCREEN;					trace("Fullscreen view");				}else{					stage.displayState=StageDisplayState.NORMAL;					trace("Default screen view");				}			}			function onClick(event:MouseEvent):void{				ns.togglePause();			}			stage.addEventListener(MouseEvent.CLICK,FullScreen);		}	}}