package{	import flash.display.Stage;	import flash.display.StageDisplayState;	import flash.display.StageAlign;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.net.NetConnection;	import flash.net.NetStream;	import flash.media.Video;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform;	import flash.geom.Rectangle;		[SWF(width="640",height="480")]		public class Local extends MovieClip{		var nc:NetConnection;		var ns:NetStream;		var nsClient:Object;		var video:Video;		var dragging:Boolean=false;		var mySliderLength:uint=63;		var boundingBox:Rectangle=new Rectangle(0,0,mySliderLength,0);		function Local():void{			nc=new NetConnection;			nc.connect(null);			ns=new NetStream(nc);			ns.play("Media/Test.flv");			nsClient=new Object();			nsClient.onMetaData=omd;			nsClient.onCuePoint=ocp;			ns.client=nsClient;			video=new Video(640,480);			video.attachNetStream(ns);			addChild(video);			stage.addChild(mc_PlayPause);			stage.addChild(mc_volume);			this.mc_PlayPause.addEventListener(MouseEvent.CLICK, onClick);			this.mc_PlayPause.buttonMode= true;			//stage.addChild(mc_vSlider);			this.mc_volume.mc_vSlider.mc_vKnob.addEventListener(MouseEvent.MOUSE_DOWN, dragKnob);			this.mc_volume.mc_vSlider.mc_vKnob.addEventListener(MouseEvent.MOUSE_UP, releaseKnob);			mc_volume.mc_vSlider.mc_vKnob.addEventListener(Event.ENTER_FRAME, adjustVolume); 			function omd(O:Object):void{				trace("OnMetaData");				trace("Duration: "+O.duration);			}			function ocp(O:Object):void{				trace("onCuePoint");				trace(O.name+" at "+O.time);			}			/*function nsPause(event:MouseEvent):void{				ns.pause();				trace("Pause");			}			function nsResume(event:KeyboardEvent):void{				ns.resume();				trace("Resume");			}*/			function nsPauseResume(event:KeyboardEvent):void{				ns.togglePause();				trace("Local stream paused or resumed.")			}			function FullScreen(event:MouseEvent):void{				if(stage.displayState == StageDisplayState.NORMAL){					stage.displayState = StageDisplayState.FULL_SCREEN;					trace("Fullscreen view");				}else{					stage.displayState = StageDisplayState.NORMAL;					trace("Default screen view");				}			}			function adjustVolume(event:Event):void { 				var myVolume:Number=mc_volume.mc_vSlider.mc_vKnob.x/mySliderLength; 				var myTransform:SoundTransform=new SoundTransform(myVolume); 				if (ns!=null) { 					ns.soundTransform=myTransform; 				}    			}			function dragKnob(event:MouseEvent):void{				 mc_volume.mc_vSlider.mc_vKnob.startDrag(false, boundingBox);				 dragging=true; 			}			function releaseKnob(event:MouseEvent):void { 				if (dragging) { 					mc_volume.mc_vSlider.mc_vKnob.stopDrag(); 					dragging=false; 				}   			} 			function onClick(event:MouseEvent):void{				ns.togglePause();			}			stage.addEventListener(KeyboardEvent.KEY_DOWN,nsPauseResume);			stage.addEventListener(MouseEvent.CLICK,FullScreen);		}	}}