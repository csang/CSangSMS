package{	import flash.display.Stage;	import flash.display.MovieClip;	import flash.events.KeyboardEvent;	import flash.events.MouseEvent;		[SWF(width="640",height="480")]		public class Publish extends MovieClip{				function Publish():void{		}				function ncNSE(event:NetStatusEvent):void{			trace("NETSTATUS[NetConnection]: "+event.info.code);						switch(event.info.code){				case "NetConnection.Connect.Success"):					trace("Connection successful");					break;								case "NetConnection.Connect.InvalidApp":					trace("Connection failed because application is invalid.");					break;								case "NetConnection.Connect.Rejected":					trace("Connection rejected.");					break;								case "NetConnection.Connect.Failed":					trace("Connection failed.");					break;								case "NetConnection.Connect.Closed":					trace("Connection closed.");					break;			}						function nsNSE(event:NetStatusEvent):void{				trace("NETSTATUS[NetStream]: "+event.info.code);								switch(event.info.code){					case "NetStream.Failed":						trace("Connection successful, but stream failed.");						break;									case "NetStream.Record.NoAccess":						trace("Connection successful, but unable to access stream.");						break;										case "NetStream.Publish.Start":						trace("Publishing successful.");						break;										case "NetStream.Publish.BadName":						trace("Attempt to publish stream with invalid name.");						break;										case "NetStream.Play.StreamNotFound":						trace("Connection successful, but stream not found.");						break;														case "NetStream.Buffer.Full":						trace("Stream buffer is full.");						break;										case "NetStream.Buffer.Empty":						trace("Stream buffer is empty.");						break;				}			}	}}